{"package": {"name": "grand_store", "git-name": "store", "dist-name": "grand-store", "description": "Common store for GRAND packages"}, "lines": {"blank": 9, "comment": 5, "docstring": 62, "code": 26}, "pep8": {"count": 1, "categories": [["1", "W391", "blank line at end of file"]]}, "doc": {"statistics": {"grand_store/protocol.py": {"tokens": {}, "n_errors": 0, "n_tokens": 7}}, "doc": "Common store for GRAND packages", "classes": {"InvalidBLOB": [25, "Wrapper for store errors", {"attributes": {}, "methods": {}, "bases": ["IOError"]}, "grand_store/protocol.py"]}, "definitions": {}, "functions": {"get": [30, "Get a BLOB from the store\n", {"parameters": {"name": ["str", "The name of the BLOB"], "tag": ["str, optional", "The tag version of the BLOB (default to \"101\")"]}, "prototype": "name, tag='101'", "returns": [["bytes", "The BLOB raw content as a bytes array", ""]], "raises": [["grand_store.InvalidBLOB", "The BLOB is not valid"]]}, "grand_store/protocol.py"]}, "imports": {"1": {"protocol": [["InvalidBLOB", "InvalidBLOB"], ["get", "get"]]}}, "path": "grand_store/__init__.py", "__all__": ["InvalidBLOB", "get"], "modules": {"protocol": {"doc": "Common store for GRAND packages", "classes": {"InvalidBLOB": [25, "Wrapper for store errors", {"attributes": {}, "methods": {}, "bases": ["IOError"]}]}, "definitions": {}, "functions": {"get": [30, "Get a BLOB from the store\n", {"parameters": {"name": ["str", "The name of the BLOB"], "tag": ["str, optional", "The tag version of the BLOB (default to \"101\")"]}, "prototype": "name, tag='101'", "returns": [["bytes", "The BLOB raw content as a bytes array", ""]], "raises": [["grand_store.InvalidBLOB", "The BLOB is not valid"]]}]}, "imports": {}, "path": "grand_store/protocol.py"}}}, "manager": {"version": "0.1.9", "git": {"sha1": "a9ef52703ae58e3ed7382b6e9bbf356a1a1c2e4b", "author": "Valentin Niess", "date": "2019-04-08 00:30:15 +0200", "count": 55}}}
